environment:
  global:
    MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
    MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
    OPENBLAS_32: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win32.zip
    OPENBLAS_64: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip
    
matrix:
  - PYTHON: C:\Python36
    PYTHON_VERSION: 3.6
    PYTHON_ARCH: 32
    TEST_MODE: fast

  - PYTHON: C:\Python27-x64
    PYTHON_VERSION: 2.7
    PYTHON_ARCH: 64
    TEST_MODE: fast

  - PYTHON: C:\Python34-x64
    PYTHON_VERSION: 3.4
    PYTHON_ARCH: 64
    TEST_MODE: fast

  - PYTHON: C:\Python36-x64
    PYTHON_VERSION: 3.6
    PYTHON_ARCH: 64
    TEST_MODE: full

  - PYTHON: C:\Python27
    PYTHON_VERSION: 2.7
    PYTHON_ARCH: 32
    SKIP_NOTAG: true
    TEST_MODE: full

  - PYTHON: C:\Python34
    PYTHON_VERSION: 3.4
    PYTHON_ARCH: 32
    SKIP_NOTAG: true
    TEST_MODE: full

  - PYTHON: C:\Python35-x64
    PYTHON_VERSION: 3.5
    PYTHON_ARCH: 64
    SKIP_NOTAG: true
    TEST_MODE: full

  - PYTHON: C:\Python35
    PYTHON_VERSION: 3.5
    PYTHON_ARCH: 32
    SKIP_NOTAG: true
    TEST_MODE: full

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

install:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

  # Check that we have the expected version and architecture for Python
  - python --version
  - >-
     %CMD_IN_ENV%
     python -c "import sys,platform,struct;
     print(sys.platform, platform.machine(), struct.calcsize('P') * 8, )"
  # Install the BLAS library 
  #  - install "openblas.lib" to PYTHON\lib
  #  - install OpenBLAS.dll to MINGW\bin
  - ps: |
      $PYTHON_ARCH = $env:PYTHON_ARCH
      $PYTHON = $env:PYTHON
      If ($PYTHON_ARCH -eq 32) {
          $OPENBLAS = $env:OPENBLAS_32
      } Else {
          $OPENBLAS = $env:OPENBLAS_64
      }
      $clnt = new-object System.Net.WebClient
      $file = "$(New-TemporaryFile).zip"
      $tmpdir = New-TemporaryFile | %{ rm $_; mkdir $_ }
      $destination = "$PYTHON\lib\openblas.a"
      echo $file
      echo $tmpdir
      echo $OPENBLAS
      $clnt.DownloadFile($OPENBLAS,$file)
      Get-FileHash $file | Format-List
      Expand-Archive $file $tmpdir      
      rm $tmpdir\$PYTHON_ARCH\lib\*.dll.a
      $lib = ls $tmpdir\$PYTHON_ARCH\lib\*.a | ForEach { ls $_ } | Select-Object -first 1
      echo $lib
      cp $lib $destination
      ls $destination

build_script:
  - pip install cython numpy
  - pip install cibuildwheel==0.5.1
  - cibuildwheel --output-dir wheelhouse

artifacts:
  - path: "wheelhouse\\*.whl"
    name: Wheels
